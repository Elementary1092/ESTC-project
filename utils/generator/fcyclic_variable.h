#ifndef ESTC_UTILS_GENERATOR_CYCLIC_VARIABLE_H
#define ESTC_UTILS_GENERATOR_CYCLIC_VARIABLE_H

#include <stdbool.h>

/**
 * @brief Describes values which will be used to generate sequence.
*/
typedef struct
{
	float current_value; /**< The last produced value. 
	                          When (max_value or min_value) >> step may stop changing 
							  because of specific nature of representation of floating point values. */
	float step;          /**< Increment or decrement of the produced value after each call of next(). */
	float max_value;     /**< Maximum possible value of the sequence. */
	float min_value;     /**< Minumum possible */
	bool is_increasing;  /**< internal; Determines whether step should be added or subtracted from current_value. */
	bool is_valid;       /**< internal; Determines whether this structure is valid or not. Should not be changed elsewhere.*/
} utils_generator_fcyclic_variable_ctx_t;

/**
 * @brief Creates context of generator by given values.
 * 
 * @attention May swap min_value and max_value, if max_value < min_value.
 * 
 * @param[in] starting_value The first value produced by generator.
 * 
 * @param[in] min_value The least value that may be generated by the generator.
 * 
 * @param[in] max_value The largest value that may be generated by the generator.
 * 
 * @param[in] step Increment or decrement of the produced value.
 * 
 * @retval !(.is_valid) If the generator with given values cannot be created.
 * 
 * @retval .is_valid If the generator is created successfully.
*/
utils_generator_fcyclic_variable_ctx_t utils_generator_fcyclic_variable_ctx_init(float starting_value,
																				 float min_value,
																				 float max_value,
																				 float step);

/**
 * @brief Tries to generate next value in the sequence according to the given context.
 * 
 * @param[in] generator_ctx Values needed to generate the next value in the sequence.
 * 
 * @attention Returns immediatelly if generator_ctx is not valid.
*/
void utils_generator_fcyclic_variable_next(utils_generator_fcyclic_variable_ctx_t * const generator_ctx);

#endif